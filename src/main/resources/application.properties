spring.application.name=gleif-lei-spring-batch-processor


# Spring Batch properties
# Set the job table prefix for cleaner database schemas
spring.batch.job.name=leiProcessorJob

# Use a real database for production. H2 is for development.
# Example for a PostgreSQL database:
# spring.datasource.url=jdbc:postgresql://localhost:5432/your_database
# spring.datasource.username=your_user
# spring.datasource.password=your_password
# spring.datasource.driver-class-name=org.postgresql.Driver

# For this example, we'll keep the H2 in-memory DB configuration
#spring.datasource.url=jdbc:h2:mem:leibatchdb;DB_CLOSE_DELAY=-1
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=


# H2 In-Memory Database Configuration
spring.datasource.url=jdbc:h2:mem:leibatchdb;DB_CLOSE_DELAY=-1
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Spring Batch Schema Initialization
spring.sql.init.mode=always

# GLEIF API configuration
gleif.api.base-url=https://api.gleif.org/api/v1
gleif.input.file-path=classpath:lei_records_input.csv

# Output file paths
gleif.output.lei-records=output/lei_records.csv
gleif.output.relationship-records=output/relationship_records.csv
gleif.output.failed-records=output/failed_records.csv

# Scheduling configuration (Cron expression: every day at 1 AM)
gleif.job.cron=0 0 1 * * ?
